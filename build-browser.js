#!/usr/bin/env node

/**
 * Build script to create browser-compatible version from index.js
 * Wraps the ES6 module in a UMD pattern for browser usage
 */

const fs = require('fs');
const path = require('path');

const sourceFile = path.join(__dirname, 'index.js');
const outputFile = path.join(__dirname, 'form-watcher.browser.js');

// Read the source file
const sourceCode = fs.readFileSync(sourceFile, 'utf8');

// Remove the export statement
const codeWithoutExport = sourceCode.replace(/export default FormWatcher\s*$/m, '').trim();

// Wrap in UMD pattern
const umdWrapper = `/**
 * FormWatcher - Browser version (UMD)
 * Tracks form changes and provides detailed change information
 *
 * @version 1.0.0
 * @author Frank Etoundi
 * @license MIT
 *
 * This is an automatically generated file compiled from index.js
 * DO NOT EDIT THIS FILE DIRECTLY - Edit index.js and run: npm run build:browser
 *
 * Source: https://github.com/etoundi1er/form_watcher
 * Build: ${new Date().toISOString()}
 */
(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD
        define([], factory);
    } else if (typeof module === 'object' && module.exports) {
        // Node/CommonJS
        module.exports = factory();
    } else {
        // Browser globals
        root.FormWatcher = factory();
    }
}(typeof self !== 'undefined' ? self : this, function () {
    'use strict';

${codeWithoutExport}

    return FormWatcher;
}));
`;

// Write the output file
fs.writeFileSync(outputFile, umdWrapper, 'utf8');

console.log('âœ… Browser build created successfully!');
console.log(`   Source: ${sourceFile}`);
console.log(`   Output: ${outputFile}`);
